@model ControlWork7.ViewModels.IndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <form asp-action="Index" method="get">
                <th>
                    <label for="name">Название</label>
                    <input class="form-control" name="name" id="name" type="text" />
                </th>
                <th>
                    <label for="author">Автор</label>
                    <input class="form-control" name="author" id="author" type="text" />
                </th>
                <th>
                    <label for="status">Status</label>
                    <select class="form-control" name="status" id="status">
                        <option value=""> </option>
                        <option value="В наличии">В наличии</option>
                        <option value="Выдана">Выдана</option>
                    </select>
                </th>
                <button class="btn btn-primary">Фильтровать</button>

             </form>
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.NameSort">Название</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.AuthorSort">Автор</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.StatusSort">Статус</a>
            </th>
        </tr>
    </thead>
</table>
@if (Model.Books.Count == 0)
{
    <p>Книг нету</p>
}
@foreach (var book in Model.Books)
{
    <div class="card" style="width: 18rem;">
      <img src="@book.PhotoUrl" class="card-img-top" alt="No Image">
      <div class="card-body">
        <h5 class="card-title">@book.Name</h5>
      </div>
      <ul class="list-group list-group-flush">a
        <li class="list-group-item">Автор: @book.Author</li>
        <li class="list-group-item">Статус: @book.Status</li>
            @if (book.UsersAndBooks.Where(b => b.User != null && b.ReturnBookDate == null).Count() > 0)
            {
                <li class="list-group-item">Использует: @book.UsersAndBooks.LastOrDefault().User.Name</li>
            }

      </ul>
      <div class="card-body">
            @if (!User.Identity.IsAuthenticated)
            {
                
            }
            else if (book.UsersAndBooks.Count == 0 || !book.UsersAndBooks.Any(b => b.ReturnBookDate == null && b.User != null) && book.Status == "В наличии")
            {
                <a class="card-link btn btn-primary" asp-action="TakeBook" asp-route-id="@book.Id">Получить</a>
            }
            else if (book.UsersAndBooks.Any(b => b.ReturnBookDate == null && b.User.Email == User.Identity.Name) && book.Status == "Выдана")
            {
                <a class="card-link btn btn-primary" asp-action="ReturnBook" asp-route-id="@book.Id">Вернуть</a>
            }
            <a class="card-link btn btn-warning" asp-action="Details" asp-route-id="@book.Id">Подробнее</a>
            
      </div>
    </div>
}
<div class="row">
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a class="col-2" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumger - 1)" class="btn btn-primary">Назад</a>
    }
    <span class="text-primary col-2">@Model.PageViewModel.PageNumger</span>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a class="col-2" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumger + 1)" class="btn btn-primary">Вперед</a>

    }
</div>